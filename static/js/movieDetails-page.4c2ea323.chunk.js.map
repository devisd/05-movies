{"version":3,"file":"static/js/movieDetails-page.4c2ea323.chunk.js","mappings":"sNA4DA,EAlDyB,WAAO,IAAD,EACrBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBR,GAASS,KAAKL,EACnC,GAAE,CAACJ,IAEJ,IAAMU,GAAS,UAAAL,EAASM,aAAT,eAAgBC,OAAQ,IAEvC,OACE,iCACE,iBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,gBAA/C,WACE,SAAC,KAAD,CAAMC,GAAIN,EAAV,sBACA,SAAC,KAAD,CAAMM,GAAI,IAAV,4BAGDb,IACC,0BACE,4BACE,wBAAKA,EAAMc,SACX,oCAEGd,EAAMe,OAAOC,KAAI,SAAAC,GAAE,OAClB,wBAAiBA,EAAGC,MAAXD,EAAGE,GADM,QAItB,sCACA,uBAAInB,EAAMoB,YACV,0CAAkBpB,EAAMqB,iBACxB,cAAGC,KAAMtB,EAAMuB,SAAf,SAA0BvB,EAAMuB,YAChC,mBACA,SAAC,KAAD,CAASV,GAAE,OAAUL,MAAO,CAAEC,KAAMP,EAASM,MAAMC,MAAnD,mBAGA,SAAC,KAAD,CAASI,GAAE,UAAaL,MAAO,CAAEC,KAAMP,EAASM,MAAMC,MAAtD,0BAMN,mBACA,SAAC,EAAAe,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,QAIP,C,mMCxDDC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAGL,SAAeC,IAAtB,+B,aAAO,O,0BAAA,yGACkBF,IAAAA,IAAA,uCAA0CC,IAD5D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,0BAAA,WAAmCC,GAAnC,4FACkBP,IAAAA,IAAA,gCACIC,EADJ,iCACgCM,EADhC,gCADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAQA,SAAe1B,EAAtB,kC,aAAO,O,0BAAA,WAAmCR,GAAnC,4FACkB6B,IAAAA,IAAA,iBACX7B,EADW,oBACQ8B,EADR,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAQA,SAAeI,EAAtB,kC,aAAO,O,0BAAA,WAAgCrC,GAAhC,4FACkB6B,IAAAA,IAAA,iBACX7B,EADW,4BACgB8B,EADhB,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKK,MAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAAmCvC,GAAnC,4FACkB6B,IAAAA,IAAA,iBACX7B,EADW,4BACgB8B,EADhB,2BADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["components/MovieDetailsPage/MovieDetailsPage.jsx","services/movieSearch.js"],"sourcesContent":["import React, { useEffect, useState, Suspense } from 'react';\nimport {\n  useParams,\n  useLocation,\n  Outlet,\n  Link,\n  NavLink,\n} from 'react-router-dom';\nimport { fetchOnMovieDetails } from '../../services/movieSearch';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchOnMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const goBack = location.state?.from || '/';\n\n  return (\n    <>\n      <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n        <Link to={goBack}>Go back</Link>\n        <Link to={'/'}>Go Homepage</Link>\n      </div>\n\n      {movie && (\n        <div>\n          <div>\n            <h2>{movie.title}</h2>\n            <ul>\n              Genres:\n              {movie.genres.map(el => (\n                <li key={el.id}>{el.name}</li>\n              ))}\n            </ul>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <p>Release date: {movie.release_date}</p>\n            <a href={movie.homepage}>{movie.homepage}</a>\n            <br />\n            <NavLink to={`cast`} state={{ from: location.state.from }}>\n              Cast\n            </NavLink>\n            <NavLink to={`reviews`} state={{ from: location.state.from }}>\n              Rewiew\n            </NavLink>\n          </div>\n        </div>\n      )}\n      <hr />\n      <Suspense fallback={<h3>Loading...</h3>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '60778458bdbdfa7e14ca7e73fe4a1fef';\n\n// // список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport async function fetchOnTrending() {\n  const response = await axios.get(`/trending/movie/week?api_key=${KEY}`);\n  return response.data.results;\n}\n\n// поиск кинофильма по ключевому слову на странице фильмов.\nexport async function fetchOnSearchMovies(searchQuery) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\n// запрос полной информации о фильме для страницы кинофильма.\nexport async function fetchOnMovieDetails(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport async function fetchOnMovieCast(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\n// запрос обзоров для страницы кинофильма.\nexport async function fetchOnMovieReviews(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","fetchOnMovieDetails","then","goBack","state","from","style","display","justifyContent","to","title","genres","map","el","name","id","overview","release_date","href","homepage","Suspense","fallback","axios","KEY","fetchOnTrending","response","data","results","fetchOnSearchMovies","searchQuery","fetchOnMovieCast","cast","fetchOnMovieReviews"],"sourceRoot":""}