{"version":3,"file":"static/js/cast-page.15a87948.chunk.js","mappings":"6MA0CA,EAtCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,KAAKH,EAChC,GAAE,CAACJ,IAEoB,IAApBG,EAASK,QAET,iCACE,kCAEA,2DAKF,iCACE,kCAEA,wBACGL,EAASM,KAAI,SAAAC,GACZ,OACE,2BACE,wBAAKA,EAAGC,QACR,uBAAID,EAAGE,aACP,mBACA,oBAJOF,EAAGG,UAOf,QAKV,C,mMCtCDC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAGL,SAAeC,IAAtB,+B,aAAO,O,0BAAA,yGACkBF,IAAAA,IAAA,uCAA0CC,IAD5D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,0BAAA,WAAmCC,GAAnC,4FACkBP,IAAAA,IAAA,gCACIC,EADJ,iCACgCM,EADhC,gCADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAQA,SAAeG,EAAtB,kC,aAAO,O,0BAAA,WAAmCtB,GAAnC,4FACkBc,IAAAA,IAAA,iBACXd,EADW,oBACQe,EADR,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAQA,SAAeZ,EAAtB,kC,aAAO,O,0BAAA,WAAgCN,GAAhC,4FACkBc,IAAAA,IAAA,iBACXd,EADW,4BACgBe,EADhB,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKK,MAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAAmCxB,GAAnC,4FACkBc,IAAAA,IAAA,iBACXd,EADW,4BACgBe,EADhB,2BADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["components/Cast/Cast.jsx","services/movieSearch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchOnMovieCast } from '../../services/movieSearch';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castTeam, setCastTeam] = useState([]);\n\n  useEffect(() => {\n    fetchOnMovieCast(movieId).then(setCastTeam);\n  }, [movieId]);\n\n  if (castTeam.length === 0) {\n    return (\n      <>\n        <h1>Cast</h1>\n\n        <h2>Sorry, cast info not found</h2>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <h1>Cast</h1>\n\n        <ul>\n          {castTeam.map(el => {\n            return (\n              <li key={el.credit_id}>\n                <h2>{el.name}</h2>\n                <p>{el.character}</p>\n                <br />\n                <br />\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '60778458bdbdfa7e14ca7e73fe4a1fef';\n\n// // список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport async function fetchOnTrending() {\n  const response = await axios.get(`/trending/movie/week?api_key=${KEY}`);\n  return response.data.results;\n}\n\n// поиск кинофильма по ключевому слову на странице фильмов.\nexport async function fetchOnSearchMovies(searchQuery) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\n// запрос полной информации о фильме для страницы кинофильма.\nexport async function fetchOnMovieDetails(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport async function fetchOnMovieCast(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\n// запрос обзоров для страницы кинофильма.\nexport async function fetchOnMovieReviews(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["movieId","useParams","useState","castTeam","setCastTeam","useEffect","fetchOnMovieCast","then","length","map","el","name","character","credit_id","axios","KEY","fetchOnTrending","response","data","results","fetchOnSearchMovies","searchQuery","fetchOnMovieDetails","cast","fetchOnMovieReviews"],"sourceRoot":""}